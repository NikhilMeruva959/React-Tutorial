{"ast":null,"code":"var _jsxFileName = \"/Users/nikmeruva/Documents/Udemy React Tutorial/Section 10 - Side Effects, Reducers, & Context API/01-starting-project 4/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const context = useContext(AuthContext);\n  return (\n    /*#__PURE__*/\n    // All children have acess to AuthContext its values\n    // <AuthContext.Provider value={{\n    //   isLoggedIn: isLoggedIn,\n    //   onLogout: logoutHandler\n    // }}>\n    _jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!context.isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 35\n        }, this), context.isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  );\n}\n\n_s(App, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikmeruva/Documents/Udemy React Tutorial/Section 10 - Side Effects, Reducers, & Context API/01-starting-project 4/src/App.js"],"names":["React","useContext","Login","Home","MainHeader","AuthContext","App","context","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAMC,OAAO,GAAGN,UAAU,CAACI,WAAD,CAA1B;AAEA;AAAA;AACE;AACE;AACA;AACA;AACA;AACA,YAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAEG,CAACE,OAAO,CAACC,UAAT,iBAAuB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAF1B,EAGGD,OAAO,CAACC,UAAR,iBAAsB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAgBD;;GArBQF,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import React, { useContext } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  \n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const context = useContext(AuthContext);\n  \n  return (\n    // All children have acess to AuthContext its values\n      // <AuthContext.Provider value={{\n      //   isLoggedIn: isLoggedIn,\n      //   onLogout: logoutHandler\n      // }}>\n      <React.Fragment>\n        <MainHeader/>\n        <main>\n          {/* Because we are directly using the isLoggedIn in Login and Home and not just fowarding it */}\n          {!context.isLoggedIn && <Login/>}\n          {context.isLoggedIn && <Home/>}\n        </main>\n      {/* </AuthContext.Provider> */}\n      </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}