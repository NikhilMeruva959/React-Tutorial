{"version":3,"sources":["components/Login/Login.module.css","Input/Input.module.css","components/UI/Card/Card.module.css","components/UI/Button/Button.module.css","components/Home/Home.module.css","components/MainHeader/Navigation.module.css","components/MainHeader/MainHeader.module.css","components/UI/Card/Card.js","components/UI/Button/Button.js","store/auth-context.js","Input/Input.js","components/Login/Login.js","components/Home/Home.js","components/MainHeader/Navigation.js","components/MainHeader/MainHeader.js","App.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Button","type","button","onClick","disabled","AuthContext","React","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","useState","setIsLoggedIn","useEffect","localStorage","getItem","Provider","value","removeItem","setItem","Input","forwardRef","ref","inputRef","useRef","activate","current","focus","useImperativeHandle","control","isValid","invalid","htmlFor","id","label","onChange","onBlur","emailReducer","state","action","val","includes","passwordReducer","trim","length","Login","formIsValid","setFormIsValid","useReducer","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","useContext","emailInputRef","passowordInputRef","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","login","onSubmit","event","preventDefault","target","actions","btn","Home","authCTX","home","Navigation","context","nav","href","MainHeader","App","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f7cfeca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\",\"control\":\"Login_control__1O9dn\",\"invalid\":\"Login_invalid__1Kvhn\",\"actions\":\"Login_actions__1b5Oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Input_login__1Wn4-\",\"control\":\"Input_control__9M3Xi\",\"invalid\":\"Input_invalid__2awRw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1te4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__3idT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__JfAVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"MainHeader_main-header__2OmAM\"};","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useEffect } from \"react\";\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  // Better IDE Completion\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\n\nexport const AuthContextProvider = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n// Executed AFTER every component reevaluation, but only if dependecies change\n// Would only run once, when app starts, because dependcies dont change\n  useEffect(() => {\n    const storedUderLoggedInInformation = localStorage.getItem('isLoggedIn');\n    \n    if(storedUderLoggedInInformation === '1'){\n      setIsLoggedIn(true);\n    } \n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', \"1\");\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler,\n        onLogin: loginHandler,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import React, {useRef, useImperativeHandle} from \"react\";\nimport classes from './Input.module.css';\n\nconst Input = React.forwardRef((props, ref) => {\n    const inputRef = useRef();\n\n    const activate = () => {\n        inputRef.current.focus();\n    };\n\n    useImperativeHandle(ref, () => {\n        return {\n            focus: activate,\n        };\n    });\n\n    return(\n        <div\n          className={`${classes.control} ${\n            props.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor={props.id}>{props.label}</label>\n          <input\n            ref={inputRef}\n            type={props.type}\n            id={props.id}\n            value={props.value}\n            onChange={props.onChange}\n            onBlur={props.onBlur}\n          />\n        </div>\n    );\n});\nexport default Input;","import React, { useState, useEffect, useReducer, useContext, useRef} from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../../Input/Input\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    // state.value gets last snapshot\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    // state.value gets last snapshot\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const authCtx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passowordInputRef = useRef();\n\n  // If no dependicies, then infinite loop\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n\n    //Since component is removed from the DOM\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n\n  // Object destructiong to pull out certain properties\n  // From emailState, we are extracting and pulling out isValid and storing in a constant emailIsValid\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity!\");\n      setFormIsValid(\n        // instead of emailState.isValid and passwordState.isValid\n        emailIsValid && passwordIsValid\n      );\n    }, 500);\n\n    // Cleanup function that will run before useEffect executs this function in time\n    // Except for the 1st time, this cleanup function will run\n    // Also will run whenever the component unmounts from DOM\n    return () => {\n      console.log(\"CLEANUP\");\n      // clearTimeout(identifier) will clear timer set before this, so new timer will be set\n      // the above will run once, so say i keep typing, it will continously reset the timer\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  // will run if emailIsValid, passwordIsValid chnage\n\n  //this effect will only run once when the component is rendered\n\n  // After every login component execution, it will rerun this useEffect() when either enteredEmail, enteredPassword change\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(\n    //   event.target.value.includes(\"@\") && passwordState.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(\n    //   emailState.isValid && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if(formIsValid){\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if(!emailIsValid){\n      emailInputRef.current.focus();\n    } else{\n      passowordInputRef.current.focus();\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        {/* Pulling out emailIsValid from above emailState */}\n        <Input\n        ref ={emailInputRef}\n          id=\"email\"\n          label=\"E-Mail\"\n          type=\"email\"\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Input\n          ref={passowordInputRef}\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Home.module.css';\nimport AuthContext from '../../store/auth-context';\nimport Button from '../UI/Button/Button';\n\nconst Home = (props) => {\n  const authCTX = useContext(AuthContext);\n\n  return (\n    <Card className={classes.home}>\n      <h1>Welcome back!</h1>\n      <Button onClick={authCTX.onLogout}>Logout</Button>\n    </Card>\n  );\n};\n\nexport default Home;\n","import React, {useContext} from 'react';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './Navigation.module.css';\n\nconst Navigation = () => {\n  const context = useContext(AuthContext);\n  return (\n    // <AuthContext.Consumer>\n    //   {(context)=> {\n    //     return (\n        <nav className={classes.nav}>\n          <ul>\n            {context.isLoggedIn && (\n              <li>\n                <a href=\"/\">Users</a>\n              </li>\n            )}\n            {context.isLoggedIn && (\n              <li>\n                <a href=\"/\">Admin</a>\n              </li>\n            )}\n            {context.isLoggedIn && (\n              <li>\n                {/* onLogout because auth-context.js has onLogout: () => {} */}\n                <button onClick={context.onLogout}>Logout</button>\n              </li>\n            )}\n          </ul>\n        </nav>\n        // );\n  //     }}\n  //   </AuthContext.Consumer>\n\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nimport Navigation from './Navigation';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes['main-header']}>\n      <h1>Login Website</h1>\n      <Navigation />\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  \n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const context = useContext(AuthContext);\n  \n  return (\n    // All children have acess to AuthContext its values\n      // <AuthContext.Provider value={{\n      //   isLoggedIn: isLoggedIn,\n      //   onLogout: logoutHandler\n      // }}>\n      <React.Fragment>\n        <MainHeader/>\n        <main>\n          {/* Because we are directly using the isLoggedIn in Login and Home and not just fowarding it */}\n          {!context.isLoggedIn && <Login/>}\n          {context.isLoggedIn && <Home/>}\n        </main>\n      {/* </AuthContext.Provider> */}\n      </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <App />\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}