{"ast":null,"code":"var _jsxFileName = \"/Users/nikmeruva/Documents/Udemy React Tutorial/Section 11 - Food Order App/Food Ordering App/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport { useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem({ ...id,\n      amount: 1\n    });\n  }; //For adding within cart by 1\n\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  }; // const cartItems = (\n  //   <ul className={classes[\"cart-items\"]}>\n  //     {[{ id: \"c1\", name: \"Sushi\", amount: 2, price: 12.99 }].map((item) => (\n  //       <li>{item.name}</li>\n  //     ))}\n  //   </ul>\n  // );\n  //useContext to map to CartItems\n\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price // .bind(null, item.id) - preconfigures a function for future execution and precinfigures the argument when it's being executed\n      ,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this); // everything to Modal\n\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[\"button-alt\"],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/nikmeruva/Documents/Udemy React Tutorial/Section 11 - Food Order App/Food Ordering App/src/components/Cart/Cart.js"],"names":["React","classes","Modal","useContext","CartContext","CartItem","Cart","props","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","amount","cartItemAddHandler","item","addItem","cartItems","map","name","price","bind","onClose","total","actions","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,OAAO,GAAGL,UAAU,CAACC,WAAD,CAA1B;AAEA,QAAMK,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AAEA,QAAMC,qBAAqB,GAAIC,EAAD,IAAQ;AACpCP,IAAAA,OAAO,CAACQ,UAAR,CAAmB,EAAC,GAAGD,EAAJ;AAAQE,MAAAA,MAAM,EAAC;AAAf,KAAnB;AACD,GAFD,CANsB,CAUtB;;;AACA,QAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACnCX,IAAAA,OAAO,CAACY,OAAR,CAAgB,EAAC,GAAGD,IAAJ;AAAUF,MAAAA,MAAM,EAAC;AAAjB,KAAhB;AACD,GAFD,CAXsB,CAetB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAMI,SAAS,gBACb;AAAI,IAAA,SAAS,EAAEpB,OAAO,CAAC,YAAD,CAAtB;AAAA,cACGO,OAAO,CAACI,KAAR,CAAcU,GAAd,CAAmBH,IAAD,iBACjB,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,IAAI,CAACI,IAFb;AAGE,MAAA,MAAM,EAAEJ,IAAI,CAACF,MAHf;AAIE,MAAA,KAAK,EAAEE,IAAI,CAACK,KAJd,CAKE;AALF;AAME,MAAA,QAAQ,EAAEV,qBAAqB,CAACW,IAAtB,CAA2B,IAA3B,EAAiCN,IAAI,CAACJ,EAAtC,CANZ;AAOE,MAAA,KAAK,EAAEG,kBAAkB,CAACO,IAAnB,CAAwB,IAAxB,EAA8BN,IAA9B;AAPT,OACOA,IAAI,CAACJ,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF,CAxBsB,CAwCtB;;;AACA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAER,KAAK,CAACmB,OAAtB;AAAA,eACGL,SADH,eAEI;AAAK,MAAA,SAAS,EAAEpB,OAAO,CAAC0B,KAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOlB;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAK,MAAA,SAAS,EAAER,OAAO,CAAC2B,OAAxB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAE3B,OAAO,CAAC,YAAD,CAA1B;AAA0C,QAAA,OAAO,EAAEM,KAAK,CAACmB,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGGf,QAAQ,iBAAI;AAAQ,QAAA,SAAS,EAAEV,OAAO,CAAC4B,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvDD;;GAAMvB,I;;KAAAA,I;AAwDN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport { useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const cartCtx = useContext(CartContext);\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem({...id, amount:1})\n  };\n\n  //For adding within cart by 1\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem({...item, amount:1}); \n  };\n\n  // const cartItems = (\n  //   <ul className={classes[\"cart-items\"]}>\n  //     {[{ id: \"c1\", name: \"Sushi\", amount: 2, price: 12.99 }].map((item) => (\n  //       <li>{item.name}</li>\n  //     ))}\n  //   </ul>\n  // );\n\n  //useContext to map to CartItems\n  const cartItems = (\n    <ul className={classes['cart-items']}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          // .bind(null, item.id) - preconfigures a function for future execution and precinfigures the argument when it's being executed\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  // everything to Modal\n  return (\n    <Modal onClose={props.onClose}>\n      {cartItems}\n        <div className={classes.total}>\n          <span>Total Amount</span>\n          <span>{totalAmount}</span>\n        </div>\n        <div className={classes.actions}>\n          <button className={classes[\"button-alt\"]} onClick={props.onClose}>Close</button>\n          {/* //Order button only if we have items */}\n          {hasItems && <button className={classes.button}>Order</button>}\n        </div>\n    </Modal>\n  );\n};\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}