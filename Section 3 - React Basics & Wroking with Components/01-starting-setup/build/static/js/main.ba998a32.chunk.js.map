{"version":3,"sources":["components/Card.js","components/ExpenseFilter.js","components/ExpenseDate.js","components/ExpenseItem.js","components/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/ExpensesChart.js","components/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","arr","length","map","expense","id","ChartBar","barHeightFill","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","val","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","dummyExpenses","App","setExpenses","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba998a32.chunk.js","sourcesContent":["import './Card.css'\nimport React from 'react';\n\nfunction Card(props) {\n    // css will be added with card.css\n    // need 'card ' <- whitespace \n    const classes = 'card ' + props.className;\n    \n    return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;","import React from 'react';\nimport './ExpenseFilter.css';\n\nconst ExpenseFilter = (props) =>{\n    const saveYealryExpenseDataHandler = (event) => {\n        // Needed for Expenses.js filterChangeHandler()\n        props.onChangeFilter(event.target.value);\n    };\n    return(\n        <div className='expenses-filter'>\n            <div className='expenses-filter__control'>\n                <label>Filter by year</label>\n                <select value={props.selected} onChange={saveYealryExpenseDataHandler}>\n                    <option value='2022'>2022</option>\n                    <option value='2021'>2021</option>\n                    <option value='2020'>2020</option>\n                    <option value='2019'>2019</option>\n                </select>\n            </div>\n        </div>\n    );\n};\nexport default ExpenseFilter;","import React from 'react';\nimport './ExpenseDate.css';\n\nfunction ExpenseDate(props) {\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\n    const year = props.date.getFullYear();\n    \n    return(\n        <div className=\"expense-date\"> \n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__year\">{year}</div>\n            <div className=\"expense-date__day\">{day}</div>\n        </div>\n    );\n};\nexport default ExpenseDate;","import React from 'react';\n//useState - allows us to define values of state where changes in the value should reflect changes\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\nimport Card from './Card';\n\n//props allows you to pass in key value pairs\nfunction ExpenseItem(props){\n    //add eventlistener like this\n\n    // const [title, setTitle] = useState(props.title); //acturally return an array, 1st value actual value, 2nd is updated value\n\n    // const clickHandler = () => {\n    //     setTitle('Updated!');\n    //     console.log(title);\n    // }\n    //return should have one root element hence ()\n    return (\n        <li>\n        <Card className='expense-item'>\n            <ExpenseDate date = {props.date}></ExpenseDate>\n            <div className='expense-item__description'>\n                <h2>{props.title}</h2>\n                <div className='expense-item__price'>${props.amount}</div>\n            </div>\n            {/* <button onClick={clickHandler}>Change Title</button> */}\n        </Card>    \n        </li>\n    );\n};\nexport default ExpenseItem;\n\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport './ExpensesList.css';\n\nconst onChangeFilter = (props) => {\n    // let expensesContent = <p>No Expenses!!!</p>\n\n   //&& will perform the statement to the right if first condition is met\n   if(props.arr.length === 0){\n        return <h2 className=\"expenses-list__fallback\">No Expenses Found!!!</h2>;\n        \n    }\n   return(\n       <ul className=\"expenses-list\">\n           {props.arr.map((expense) => (\n            <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n            />\n       ))}\n       </ul>\n\n   );\n};\n\nexport default onChangeFilter;","import React from \"react\";\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n    let barHeightFill = \"0%\";\n\n    if(props.maxValue > 0){\n        barHeightFill = Math.round((props.value / props.maxValue) * 100) + \"%\";\n    }\n\n    return(\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                <div className=\"chart-bar__fill\" style={{height: barHeightFill}}></div>\n            </div>\n            <div className=\"chart-bar__label\">{props.label}</div>\n        </div>\n    );\n};\nexport default ChartBar;","import React from \"react\";\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) =>{\n\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.val);\n    //...dataPointValues pulls out all array args and pulled out using ...\n    const totalMax = Math.max(...dataPointValues);\n\n    return(\n        <div className=\"chart\">\n            {props.dataPoints.map((dataPoint) => (\n            <ChartBar\n            key={dataPoint.label}\n            value={dataPoint.val}\n            maxValue={totalMax}\n            label={dataPoint.label}\n            />\n            ))}\n        </div>\n    );\n};\nexport default Chart;","import React from \"react\";\nimport Chart from \"./Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", val: 0 },\n    { label: \"Feb\", val: 0 },\n    { label: \"Mar\", val: 0 },\n    { label: \"Apr\", val: 0 },\n    { label: \"May\", val: 0 },\n    { label: \"Jun\", val: 0 },\n    { label: \"Jul\", val: 0 },\n    { label: \"Aug\", val: 0 },\n    { label: \"Sep\", val: 0 },\n    { label: \"Oct\", val: 0 },\n    { label: \"Nov\", val: 0 },\n    { label: \"Dec\", val: 0 },\n  ];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].val += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"./Card\";\nimport ExpensesFilter from \"./ExpenseFilter.js\";\nimport ExpensesList from \"./ExpensesList.js\";\nimport ExpensesChart from './ExpensesChart.js';\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.arr.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className='expenses'>\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList arr={filteredExpenses}/>\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: ''\n  // });\n\n  //document.getElementById('').addEventListener('click', (event) => {})\n  // Eventlistner, click event, get event object when change occurs\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n\n    // ...userInput is taking an object, pulls all key value pairs, and adds to new object\n    // ...userInput makes sure other values like: enteredAmount: '' and enteredDate: '' arent thrown away and apart of new state\n    // However depends on the previous state, bad practice\n    // setUserInput({\n    //     ...userInput,\n    //     enteredTitle: event.target.value\n    // });\n\n    //Need anonmys arrow function- will automatically be executed by react and will recieve prev state snapshot for that state your calling that function\n    //React guarntees the snapshot will be latest with this way\n    // setUserInput((prevState) => {\n    //     return {...prevState, enteredTitle: event.target.value};\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n\n    // setUserInput({\n    //     ...userInput,\n    //     enteredAmount: event.target.value\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n\n    // setUserInput({\n    //     ...userInput,\n    //     enteredDate: event.target.value\n    // });\n  };\n\n  //The preventDefault() method cancels the event if it is cancelable, meaning that the default action that belongs to the event will not occur.\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    //So expenseData will go to NewExpense.js becuase of props.onSaveExpenseData(expenseData);\n    // child to parent passing information relationship\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\"); \n  };\n\n  return (\n    // onSubmit={} to submit form\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          {/* Twoway Binding: value = {enteredDate} allows to reset value once done with form */}\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, {useState} from \"react\";\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        };\n        // console.log(expenseData);\n        props.onAddExpense(expenseData);\n        setIsEditing(false);\n    };\n\n    const isEditingHandler = () => {\n        setIsEditing(true); \n    };\n\n    const stopEditingHandler = () => {\n        setIsEditing(false); \n    }\n\n    return(\n        <div className='new-expense'>\n            {!isEditing && <button onClick={isEditingHandler}>Add New Expense</button>}\n            {isEditing && <ExpenseForm onCancel={stopEditingHandler} onSaveExpenseData={saveExpenseDataHandler}></ExpenseForm>}\n        </div>\n    );\n};\nexport default NewExpense;\n\n","import React, {useState} from 'react';\nimport Expenses from './components/Expenses'\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst dummyExpenses = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  //dummyExpenses is dumy values\n  const [expenses, setExpenses] = useState(dummyExpenses)\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpense) => {\n      return [expense, ...prevExpense];\n    });\n    \n    // Not good practice\n    // setExpenses([expense, ...expenses]);\n    \n    // console.log('In App.js');\n    // console.log(expense);\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses arr = {expenses}></Expenses>\n    </div>\n  );\n\n  // Alternative using JSX for return\n  /*\n    return React.createElement(\n      'div',\n      {},\n      React.createElement('h2', {}, \"Let's get started!\"),\n      React.createElement(Expenses, {arr = expenses} )\n    );\n  */\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n/*\n- index.js first to render\n- ReactDOM is a library in package.json\n    - when you export something, ReactDOM imports that here and renders is using ReactDOM.render\n- What do this mean: ReactDOM.render(<App />, document.getElementById('root'));  ???\n    - goes into index.html in public folder and replaces <div id=\"root\"></div> with App\n-Components:\n    - they are just javascript functions\n\n-Passing data via props:\n    - components cant use other data stored in other components\n*/\n"],"sourceRoot":""}