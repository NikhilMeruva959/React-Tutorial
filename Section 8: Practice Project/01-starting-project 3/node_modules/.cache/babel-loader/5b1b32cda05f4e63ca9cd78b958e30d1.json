{"ast":null,"code":"var _jsxFileName = \"/Users/nikmeruva/Documents/Udemy React Tutorial/Section 8: Practice Project/01-starting-project 3/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [enteredUserName, setEnteredUserName] = useState(\"\");\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const [error, setError] = useState();\n\n  const userNameChangeHandler = event => {\n    setEnteredUserName(event.target.value);\n  };\n\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  const addUserHandler = event => {\n    event.preventDefault();\n\n    if (enteredUserName.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a valid name and age (non-empty values)!'\n      });\n      return;\n    } //+ does string -> int conversion\n\n\n    if (+enteredAge < 1) {\n      setError({\n        title: 'Invalid age',\n        message: 'Please enter a valid age (>0)!'\n      });\n      return;\n    } // console.log(enteredUserName, enteredAge);\n\n\n    props.onAddUser(enteredUserName, enteredAge);\n    setEnteredAge(\"\");\n    setEnteredUserName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      cssClass: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: enteredUserName,\n          onChange: userNameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          value: enteredAge,\n          onChange: ageChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"xwj1u4A+y433k/dAXhYEgkc5HX8=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/nikmeruva/Documents/Udemy React Tutorial/Section 8: Practice Project/01-starting-project 3/src/components/Users/AddUser.js"],"names":["React","useState","Card","classes","Button","ErrorModal","AddUser","props","enteredUserName","setEnteredUserName","enteredAge","setEnteredAge","error","setError","userNameChangeHandler","event","target","value","ageChangeHandler","errorHandler","addUserHandler","preventDefault","trim","length","title","message","onAddUser","input"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\n\nconst AddUser = (props) => {\n  const [enteredUserName, setEnteredUserName] = useState(\"\");\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const [error, setError] = useState();\n\n  const userNameChangeHandler = (event) => {\n    setEnteredUserName(event.target.value);\n  };\n\n  const ageChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n  };\n  \n  const errorHandler = () => {\n    setError(null);\n  };\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    if (enteredUserName.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n          title: 'Invalid input',\n          message: 'Please enter a valid name and age (non-empty values)!'\n      });\n        return;\n    }\n    //+ does string -> int conversion\n    if (+enteredAge < 1) {\n        setError({\n            title: 'Invalid age',\n            message: 'Please enter a valid age (>0)!'\n        });\n        return;\n    }\n\n    // console.log(enteredUserName, enteredAge);\n    props.onAddUser(enteredUserName, enteredAge);\n    setEnteredAge(\"\");\n    setEnteredUserName(\"\");\n  };\n\n  return (\n    <div>\n      {error && <ErrorModal title={error.title} message={error.message} onConfirm={errorHandler}/>}\n      <Card cssClass={classes.input}>\n        <form onSubmit={addUserHandler}>\n          <label htmlFor=\"username\">Username</label>\n          {/* //value={enteredUserName} resets the form because of setEnteredAge(''); and setEnteredUserName(''); */}\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={enteredUserName}\n            onChange={userNameChangeHandler}\n          />\n          <label htmlFor=\"age\">Age</label>\n          <input\n            id=\"age\"\n            type=\"number\"\n            value={enteredAge}\n            onChange={ageChangeHandler}\n          />\n          <Button type=\"submit\">Add User</Button>\n        </form>\n      </Card>\n    </div>\n  );\n};\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}